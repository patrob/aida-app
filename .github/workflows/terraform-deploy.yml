name: Terraform Deploy

on:
  workflow_call:
    inputs:
      environment:
        required: true
        type: string
        description: "Environment to deploy to (dev or prod)"
      container_name:
        required: true
        type: string
        description: "Name of the storage container for Terraform state"
    secrets:
      AZURE_AD_CLIENT_ID:
        required: true
      AZURE_AD_CLIENT_SECRET:
        required: true
      AZURE_SUBSCRIPTION_ID:
        required: true
      AZURE_AD_TENANT_ID:
        required: true
      AZURE_CREDENTIALS:
        required: true

jobs:
  terraform-deploy:
    runs-on: ubuntu-latest
    env:
      ARM_CLIENT_ID: ${{ secrets.AZURE_AD_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.AZURE_AD_CLIENT_SECRET }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.AZURE_AD_TENANT_ID }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: "1.10.5"

      - name: Azure Login
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Terraform Init
        run: |
          terraform init \
            -backend-config="resource_group_name=aida-tfstate" \
            -backend-config="storage_account_name=aidatfstate" \
            -backend-config="container_name=${{ inputs.container_name }}" \
            -backend-config="key=terraform.tfstate"
        working-directory: terraform

      - name: Terraform Plan
        run: terraform plan -var="environment=${{ inputs.environment }}" -out=tfplan
        working-directory: terraform

      - name: Terraform Apply
        run: terraform apply -auto-approve tfplan
        working-directory: terraform

